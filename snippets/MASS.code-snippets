{
    "MASS_Fragment": {
        "prefix": "mass-fragment",
        "isFileTemplate": true,
        "body": [
            "#pragma once",
            "",
            "#include \"CoreMinimal.h\"",
            "#include \"MassEntityTypes.h\"",
            "#include \"$TM_FILENAME_BASE.generated.h\"",
            "",
            "USTRUCT(BlueprintType)",
            "struct $0_API F$TM_FILENAME_BASE : public FMassFragment",
            "{",
	        "    GENERATED_BODY()",
            "",
	        "    UPROPERTY(EditAnywhere)",
	        "    FMassEntityHandle Entity;",
            "};",
        ]
    },
    "MASS_Tag": {
        "prefix": "mass-tag",
        "isFileTemplate": true,
        "body": [
            "#pragma once",
            "",
            "#include \"CoreMinimal.h\"",
            "#include \"MassEntityTypes.h\"",
            "#include \"$TM_FILENAME_BASE.generated.h\"",
            "",
            "USTRUCT()",
            "struct $0_API F$TM_FILENAME_BASE : public FMassTag",
            "{",
	        "    GENERATED_BODY()",
            "};",
        ]
    },
    "MASS_Processor_Header":{
        "prefix": "mass-processor-header",
        "isFileTemplate": true,
        "body": [
            "#pragma once",
            "",
            "#include \"CoreMinimal.h\"",
            "#include \"MassProcessor.h\"",
            "#include \"$TM_FILENAME_BASE.generated.h\"",
            "",
            "struct FMassEntityManager;",
            "",
            "UCLASS()",    
            "class $0_API U$TM_FILENAME_BASE : public UMassProcessor",
            "{",
	        "    GENERATED_BODY()",
            "",
	        "    U$TM_FILENAME_BASE();",
            "",
	        "    virtual void Execute(FMassEntityManager& EntityManager, FMassExecutionContext& Context) override;",
	        "    virtual void ConfigureQueries() override;",
            "",
	        "FMassEntityQuery EntityQuery;",
            "};",
        ]
    },
    "MASS_Processor_Code":{
        "prefix": "mass-processor-code",
        "isFileTemplate": true,
        "body": [
            "#include \"$TM_FILENAME_BASE.h\"",
            "#include \"AITypes.h\"",
            "#include \"MassExecutionContext.h\"",
            "#include \"MassCommonFragments.h\"",
            "#include \"MassEntityTemplateRegistry.h\"",

            "U$TM_FILENAME_BASE::UNavMeshMovementProcessor()",
	        "    : EntityQuery(*this)",
            "{",
	        "    bAutoRegisterWithProcessingPhases = true;",
	        "    ExecutionFlags = (int32)EProcessorExecutionFlags::All;",
	        "    ExecutionOrder.ExecuteBefore.Add(UE::Mass::ProcessorGroupNames::Avoidance);",
            "}",
            "",
            "void U$TM_FILENAME_BASE::Execute(FMassEntityManager& EntityManager, FMassExecutionContext& Context)",
            "{",
            "    EntityQuery.ForEachEntityChunk(EntityManager, Context, [this](FMassExecutionContext& Context)",
            "    {",
            "        const TConstArrayView<FTransformFragment> TransformsList = Context.GetFragmentView<FTransformFragment>();",
            "        for (int32 EntityIndex = 0; EntityIndex < Context.GetNumEntities(); ++EntityIndex)",
			"        {",
            "            // Get fragment data",
            "            const FTransform& Transform = TransformsList[EntityIndex].GetTransform();",
            "        }",
            "    });",
            "}",
            "",
            "void U$TM_FILENAME_BASE::ConfigureQueries()",
            "{",
            "    EntityQuery.AddRequirement<FTransformFragment>(EMassFragmentAccess::ReadOnly);",
            "}"
        ]
    }
}